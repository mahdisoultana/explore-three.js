/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: ollitei (https://sketchfab.com/ollitei)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fictional-supercar-v12-goblin-0a20e49ad5774d778567cb5c3f345786
Title: Fictional supercar - V12 Goblin
*/

import { Caustics, MeshTransmissionMaterial, useGLTF } from '@react-three/drei';
import { useCurrentSheet } from '@theatre/r3f';
import * as THREE from 'three';
import { useLegsTexture } from '../cheerConfigurator/hooks';
const tireMaterial = new THREE.MeshStandardMaterial({
  color: 'black',
});
const wheelMetal = new THREE.MeshStandardMaterial({
  color: 'green',
});

export function Model(props: any) {
  const { nodes, materials } = useGLTF('/models/cars/car1/car.glb');
  const sheet = useCurrentSheet()!;

  return (
    <group {...props} dispose={null}>
      <group position={[0.102, -0.355, 0]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[-Math.PI, 0, 0]}>
          <group rotation={[-Math.PI, 0, -Math.PI]}>
            {/* wheel1 BL */}
            <group position={[0.941, 1.434, 0.386]} rotation={[0, -0.035, 0]}>
              <group position={[0.007, 0, 0]}>
                <mesh
                  geometry={nodes.car_wheel_BL_car_tire_0.geometry}
                  material={tireMaterial}
                />
                <mesh
                  geometry={nodes.car_wheel_BL_car_body_0.geometry}
                  material={wheelMetal}
                />
              </group>
              <mesh
                geometry={nodes.car_brake_BL_car_body_0.geometry}
                material={materials.car_body}
                position={[0.007, 0, 0]}
              >
                <meshStandardMaterial color="red" />
              </mesh>
            </group>
            {/* wheel2 BR */}
            <group position={[-0.941, 1.434, 0.386]} rotation={[0, 0.035, 0]}>
              <mesh
                geometry={nodes.car_wheel_BR_car_body_0.geometry}
                material={wheelMetal}
              />
              <mesh
                geometry={nodes.car_wheel_BR_car_tire_0.geometry}
                material={tireMaterial}
              />
              <mesh
                geometry={nodes.car_brake_BR_car_body_0.geometry}
                material={materials.car_body}
              >
                <meshStandardMaterial color="red" />
              </mesh>
            </group>
            {/* wheel3 FL */}
            <group position={[0.829, -1.306, 0.37]} rotation={[0, -0.052, 0]}>
              <group position={[0.008, 0, 0]}>
                <mesh
                  geometry={nodes.car_wheel_FL_car_body_0.geometry}
                  material={wheelMetal}
                />
                <mesh
                  geometry={nodes.car_wheel_FL_car_tire_0.geometry}
                  material={tireMaterial}
                />
              </group>
              <mesh
                geometry={nodes.car_brake_FL_car_body_0.geometry}
                material={materials.car_body}
                position={[0.008, 0, 0]}
              >
                <meshStandardMaterial color="red" />
              </mesh>
            </group>
            {/* wheel4 FR */}
            <group position={[-0.829, -1.306, 0.366]} rotation={[0, 0.052, 0]}>
              <group position={[0, 0, 0]}>
                <mesh
                  geometry={nodes.car_wheel_FR_car_tire_0.geometry}
                  material={tireMaterial}
                />
                <mesh
                  geometry={nodes.car_wheel_FR_car_body_0.geometry}
                  material={wheelMetal}
                />
              </group>
              {/* brake */}
              <mesh
                geometry={nodes.car_brake_FR_car_body_0.geometry}
                material={materials.car_body}
                position={[0, 0, 0]}
              >
                <meshStandardMaterial color="red" />
              </mesh>
            </group>
            {/* Glasses */}
            <Glasses nodes={nodes} />
            {/* Body */}
            <BodyCar nodes={nodes} />
            {/* accessories car body */}
            <BodyAccessories nodes={nodes} />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/models/cars/car1/car.glb');

function Glasses({ nodes }: any) {
  return (
    <Caustics
      backfaces
      color={[1, 0.8, 0.8]}
      focus={[0, 1.2, 0]}
      lightSource={[-2, 2.5, -2.5]}
      frustum={1.75}
      intensity={0.005}
      worldRadius={0.66 / 10}
      ior={0.6}
      backfaceIor={1.26}
    >
      <mesh
        castShadow
        receiveShadow
        position={[0, 0, 0.732]}
        geometry={nodes.car_glass_car_glass_0.geometry}
      >
        <MeshTransmissionMaterial
          thickness={0.1}
          clearcoatRoughness={1}
          clearcoat={1}
          envMapIntensity={3}
        />
      </mesh>
    </Caustics>
  );
}

function BodyCar({ nodes }: any) {
  const mat = useLegsTexture();
  return (
    <mesh
      geometry={nodes.clearcoat_clearcoat_0.geometry}
      //   material={body}
      position={[0, 0, 0.732]}
      rotation={[-Math.PI, 0, -Math.PI]}
    >
      <meshStandardMaterial {...mat} />
    </mesh>
  );
}
function BodyAccessories({ nodes }: any) {
  const mat = useLegsTexture();
  return (
    <mesh
      geometry={nodes.car_body_car_body_0.geometry}
      position={[0, 0, 0.732]}
      rotation={[-Math.PI, 0, -Math.PI]}
    >
      <meshStandardMaterial {...mat} color="green" />
    </mesh>
  );
}
