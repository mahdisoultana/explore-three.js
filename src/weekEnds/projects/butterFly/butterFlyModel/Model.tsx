/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 scene.gltf --transform
Files: scene.gltf [19.3KB] > scene-transformed.glb [41.52KB] (-115%)
Author: Lancaster Modelagem 3D (https://sketchfab.com/lancastermodelagem3d)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/borboleta-azul-butterfly-ab9192b6bc8f49e3baed63e984c7073a
Title: Borboleta Azul - Butterfly
*/

import { Clone, Float, useAnimations, useGLTF } from '@react-three/drei';
import { Suspense, useEffect, useRef } from 'react';

export function Model(props) {
  return (
    <Suspense fallback={null}>
      <Float speed={1} rotationIntensity={1} range={[1, 2]}>
        <Butterfly scale={4} position={[-2, -1, -5]} rotation={[0, 1.5, 0]} />
        <Butterfly
          scale={4}
          position={[10.06, -1, -5]}
          rotation={[0, 1.5, 0]}
        />
        <Butterfly scale={4} position={[0.06, -1, 0]} />
      </Float>
      <Float speed={1} rotationIntensity={1} range={[1, 2]}>
        <Butterfly scale={4} position={[-2, -10, -5]} rotation={[0, 1.5, 0]} />
        <Butterfly
          scale={4}
          position={[10.06, -10, -5]}
          rotation={[0, 1.5, 0]}
        />
        <Butterfly scale={4} position={[0.06, -5, 0]} />
      </Float>
      <Float speed={1} rotationIntensity={1} range={[1, 2]}>
        <Butterfly scale={4} position={[-2, -20, -5]} rotation={[0, 1.5, 0]} />
        <Butterfly
          scale={4}
          position={[10.06, -20, -5]}
          rotation={[0, 1.5, 0]}
        />
        <Butterfly scale={4} position={[0.06, -13, 0]} />
      </Float>
      <Float speed={1} rotationIntensity={1} range={[1, 2]}>
        <Butterfly scale={4} position={[-2, -30, -5]} rotation={[0, 1.5, 0]} />
        <Butterfly
          scale={4}
          position={[10.06, -30, -5]}
          rotation={[0, 1.5, 0]}
        />
        <Butterfly scale={4} position={[0.06, -33, 0]} />
      </Float>
    </Suspense>
  );
}

function Butterfly(props) {
  const group = useRef();
  const { animations, scene } = useGLTF('/butterfly/butterfly.glb');
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions['ArmatureAction.001'].timeScale = Math.random() + 0.1;
    actions['ArmatureAction.001'].play();
  }, []);
  return <Clone object={scene} ref={group} {...props} />;
}
